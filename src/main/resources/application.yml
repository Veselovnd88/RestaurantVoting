server:
  port: 8082

spring:
  datasource:
    #DB_CLOSE_DELAY=-1 parameter appended to the end of the database URL.
    #When working with an in-memory database, we need to specify this, so the JPA implementation, which is Hibernate, won?t close the database while the application is running.
    url: jdbc:hsqldb:mem:advisorDB;DB_CLOSE_DELAY=-1
    #url: jdbc:hsqldb:file:C:/temp/advisorDB;DB_CLOSE_DELAY=-1
    #url: jdbc:hsqldb:file:/opt/hsqltemp/temp;DB_CLOSE_DELAY=-1
    username: sa
    password:

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
    properties:
      #  http://docs.jboss.org/hibernate/orm/5.3/userguide/html_single/Hibernate_User_Guide.html#configurations
      hibernate:
        #hibernate.jpa.compliance.proxy (e.g. true or false (default value))
        format_sql: true
        show_sql: true
        use_sql_comments: true
        #https://vladmihalcea.com/join-fetch-pagination-spring/
        query:
          fail_on_pagination_over_collection_fetch: true
        # https://stackoverflow.com/questions/21257819/what-is-the-difference-between-hibernate-jdbc-fetch-size-and-hibernate-jdbc-batc
        default_batch_fetch_size: 20
        jdbc:
          batch_size: 20

  sql:
    init:
      schema-locations: classpath:db/init.sql
      data-locations: classpath:db/populateDb.sql
      mode: always

vote:
  limit-time: "11:00"

logging:
  config: classpath:logback.xml